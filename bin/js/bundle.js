var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
Object.defineProperty(exports, "__esModule", { value: true });
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
    };
    GameConfig.width = 720;
    GameConfig.height = 1280;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "mainView.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{}],2:[function(require,module,exports){
"use strict";
/**
 * @ Description:  摇杆控制类
 * @ Author: lzh
 * @ Date: 2019-07-17 16:31:55
 * @ Last Modified by: lzh
 * @ Last Modified time: 2019-07-18 16:13:14
 * @ copyright: youai
 */
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./ui/layaMaxUI");
var Event = Laya.Event;
var JoyStick = /** @class */ (function (_super) {
    __extends(JoyStick, _super);
    function JoyStick(touchSp) {
        var _this = _super.call(this) || this;
        /**最大滑动距离（超过距离则显示操纵杆） */
        _this._MaxMoveDistance = 10;
        /**当前多点触摸id 防止摇杆上出现第二个手指时干扰第一个手指*/
        _this._curTouchId = -1;
        /**是否触发TouchMove事件，触发则拦截Click事件 */
        _this._isTouchMove = false;
        /**摇杆的角度 */
        _this.angle = -1;
        /**摇杆的弧度 */
        _this.radians = -1;
        _this._touchRect = touchSp;
        _this._touchRect.on(Event.MOUSE_DOWN, _this, _this._onMouseDown);
        _this._touchRect.on(Event.MOUSE_UP, _this, _this._onMouseUp);
        _this._touchRect.on(Event.MOUSE_OUT, _this, _this._onMouseUp);
        return _this;
    }
    JoyStick.prototype.onAwake = function () {
        this._originPiontX = this.width / 2;
        this._originPiontY = this.height / 2;
        this._originPiont = new Laya.Point(this._originPiontX, this._originPiontY);
        this._joystickRadius = this._originPiontX - this.joystickPoint.width / 2;
        this.visible = false;
    };
    /**
     * 鼠标按下事件回调
     * @param evt
     */
    JoyStick.prototype._onMouseDown = function (evt) {
        //记录当前按下id
        this._curTouchId = evt.touchId;
        // 记录点击的坐标点
        this._startStageX = evt.stageX;
        this._startStageY = evt.stageY;
        this._isTouchMove = false;
        //更新摇杆到屏幕按下位置
        this.pos(Laya.stage.mouseX - this._originPiontX, Laya.stage.mouseY - this._originPiontY);
        //初始化摇杆控制点位置
        this.joystickPoint.pos(this._originPiontX, this._originPiontY);
        this._touchRect.on(Event.MOUSE_MOVE, this, this._onMouseMove);
    };
    /**
     * 鼠标移动事件回调
     * @param evt
     */
    JoyStick.prototype._onMouseMove = function (evt) {
        //解决在设备上拖动到屏幕外面无法触发MOUSE_OUT和MOUSE_UP事件，所以在点击的时候判断摇杆是否存在
        if (evt.touchId != this._curTouchId)
            return;
        if (!this.visible) {
            // 当滑动超过设定的距离时才显示操纵杆
            var moveDis = this.distanceSquare(this._startStageX, this._startStageY, evt.stageX, evt.stageY);
            console.log(moveDis);
            if (moveDis > this._MaxMoveDistance * this._MaxMoveDistance) {
                this.visible = true;
                this._isTouchMove = true;
            }
        }
        else {
            //将移动时的鼠标屏幕坐标转化为摇杆局部坐标
            var locationPos = this.globalToLocal(new Laya.Point(Laya.stage.mouseX, Laya.stage.mouseY), false);
            //更新摇杆控制点位置
            this.joystickPoint.pos(locationPos.x, locationPos.y);
            //更新控制点与摇杆中心点位置距离
            this._deltaX = locationPos.x - this._originPiont.x;
            this._deltaY = locationPos.y - this._originPiont.y;
            //计算控制点在摇杆中的角度
            var dx = this._deltaX * this._deltaX;
            var dy = this._deltaY * this._deltaY;
            this.angle = Math.atan2(this._deltaX, this._deltaY) * 180 / Math.PI;
            if (this.angle < 0)
                this.angle += 360;
            //对角度取整
            this.angle = Math.round(this.angle);
            //计算控制点在摇杆中的弧度
            this.radians = Math.PI / 180 * this.angle;
            //强制控制点与中心距离
            if (dx + dy >= this._joystickRadius * this._joystickRadius) {
                //控制点在半径的位置（根据弧度变化）
                var x = Math.floor(Math.sin(this.radians) * this._joystickRadius + this._originPiont.x);
                var y = Math.floor(Math.cos(this.radians) * this._joystickRadius + this._originPiont.y);
                this.joystickPoint.pos(x, y);
            }
            else {
                //不超过取原坐标
                this.joystickPoint.pos(locationPos.x, locationPos.y);
            }
        }
    };
    /**
     * 鼠标抬起事件回调
     * @param evt
     */
    JoyStick.prototype._onMouseUp = function (evt) {
        // 如果不是上次的点击id，返回（避免多点抬起，以第一次按下id为准）
        if (evt.touchId != this._curTouchId)
            return;
        this.visible = false;
        this._touchRect.off(Event.MOUSE_MOVE, this, this._onMouseMove);
        //修改摇杆角度与弧度为-1（代表无角度）
        this.radians = this.angle = -1;
    };
    /**
     * 两点距离的平方
     * @param srcX 起始点X值
     * @param srcY 起始点Y值
     * @param desX 目标点X值
     * @param desY 目标点Y值
     */
    JoyStick.prototype.distanceSquare = function (srcX, srcY, desX, desY) {
        return (desX - srcX) * (desX - srcX) + (desY - srcY) * (desY - srcY);
    };
    return JoyStick;
}(layaMaxUI_1.ui.joystickViewUI));
exports.JoyStick = JoyStick;
},{"./ui/layaMaxUI":4}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var JoyStick_1 = require("./JoyStick");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
        Main.joystick = new JoyStick_1.JoyStick(Laya.stage);
        Laya.stage.addChild(Main.joystick);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./JoyStick":2}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var joystickViewUI = /** @class */ (function (_super) {
        __extends(joystickViewUI, _super);
        function joystickViewUI() {
            return _super.call(this) || this;
        }
        joystickViewUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.loadScene("joystickView");
        };
        return joystickViewUI;
    }(Scene));
    ui.joystickViewUI = joystickViewUI;
    REG("ui.joystickViewUI", joystickViewUI);
    var mainViewUI = /** @class */ (function (_super) {
        __extends(mainViewUI, _super);
        function mainViewUI() {
            return _super.call(this) || this;
        }
        mainViewUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.loadScene("mainView");
        };
        return mainViewUI;
    }(Scene));
    ui.mainViewUI = mainViewUI;
    REG("ui.mainViewUI", mainViewUI);
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[3])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
